---
###############################################################################
# Pi-Hole CLI Configuration
###############################################################################
# Currently pi-hole may only be partially configured using the CLI. If enabled
# use CLI for all available commands for pi-hole setup.
#
# Until all DB operations can be done via the CLI, just use the DB settings to
# apply the CLI commands.
#
# Args:
#   domain: dict domain item from pihole_domain_blocklists.
#     - id: int (unique id starting at 1)
#       type: int (0 = exact whitelist,
#                  1 = exact blacklist,
#                  2 = regex whitelist,
#                  3 = regex blacklist)
#       domain: str (domain)
#       enabled: bool (enable use)
#       comment: str (user comment)
#
# Reference:
# * https://docs.pi-hole.net/database/
# * https://docs.pi-hole.net/guides/misc/whitelist-blacklist/
# * https://docs.pi-hole.net/core/pihole-command/#whitelisting-blacklisting-and-regex

- name: 'Cli | check {{ domain.domain }}'
  ansible.builtin.command: '{{ pihole_default_binary }} -q -exact "{{ domain.domain }}"'
  changed_when: false
  become: true
  register: _pihole_cli_domain_exact_check

- name: 'Cli | remove from whitelist - {{ domain.domain }}'
  ansible.builtin.command: '{{ pihole_default_binary }} -w -d "{{ domain.domain }}"'
  become: true
  when:
    ('whitelist' in _pihole_cli_domain_exact_check.stdout) and
    not domain.enabled

- name: 'Cli | remove from blacklist - {{ domain.domain }}'
  ansible.builtin.command: '{{ pihole_default_binary }} -b -d "{{ domain.domain }}"'
  become: true
  when:
    ('blacklist' in _pihole_cli_domain_exact_check.stdout) and
    not domain.enabled

- name: 'Cli | add to whitelist - {{ domain.domain }}'
  ansible.builtin.command: '{{ pihole_default_binary }} -w "{{ domain.domain }}" --comment "{{ domain.comment }}"'
  become: true
  when:
    ('whitelist' not in _pihole_cli_domain_exact_check.stdout) and
    ('blacklist' not in _pihole_cli_domain_exact_check.stdout) and
    (domain.type == 0 or domain.type == 2) and
    domain.enabled

- name: 'Cli | add to blacklist - {{ domain.domain }}'
  ansible.builtin.command: '{{ pihole_default_binary }} -b "{{ domain.domain }}" --comment "{{ domain.comment }}"'
  become: true
  when:
    ('whitelist' not in _pihole_cli_domain_exact_check.stdout) and
    ('blacklist' not in _pihole_cli_domain_exact_check.stdout) and
    (domain.type == 1 or domain.type == 3) and
    domain.enabled
