---
###############################################################################
# Install
###############################################################################
# Installer automatically builds 'pihole-meta' package must be executed in full
# bash shell. pihole.toml is required before installation or dialog prompts
# will appear (even in --unattended) to set required defaults.
#
# pihole.toml is modified in place when the service is running, injecting
# default values and comments. A pihole.toml.broken file will appear if a
# rendered file is incorrect (variable values or syntax). All other config
# options are now stored in the database and accessed via the REST API.
#
# Additional configuration through REST API requires service to be running.

- name: 'Install | set pihole.toml'
  ansible.builtin.template:
    src: 'pihole.toml.j2'
    dest: '{{ pihole_role_toml_file }}'
    owner: '{{ _pihole_srv_user.raw }}'
    group: '{{ _pihole_srv_group.raw }}'
    mode: '0644'

- name: 'Install | set tls.pem'
  when: _pihole_cfg_webserver_tls_cert.raw | length > 0
  ansible.builtin.copy:
    src: '{{ _pihole_cfg_webserver_tls_cert.role_src }}'
    dest: '{{ _pihole_cfg_webserver_tls_cert.role_dest }}'
    owner: '{{ _pihole_srv_user.raw }}'
    group: '{{ _pihole_srv_group.raw }}'
    mode: '0600'

- name: 'Install | fetching latest installer'
  when: not _pihole.installed and not _pihole.install_cache
  ansible.builtin.get_url:
    url: 'https://install.pi-hole.net'
    dest: '/tmp/basic-install.sh'
    mode: 'u+rwx'

- name: 'Install | execute installer'
  when: not _pihole.installed
  ansible.builtin.shell: '/tmp/basic-install.sh --unattended'
  args:
    executable: '/bin/bash'
  environment:
    DEBIAN_FRONTEND: 'noninteractive'
  changed_when: true

- name: 'Install | update pihole'
  when: _pihole_srv_update_enable.raw
  ansible.builtin.shell: 'pihole -up'
  args:
    executable: '/bin/bash'
  changed_when: false

- name: 'Install | start services'
  ansible.builtin.systemd:
    name: '{{ item }}'
    enabled: true
    daemon_reload: true
    state: 'started'
  failed_when: false
  loop:
    - 'pihole-FTL.service'
