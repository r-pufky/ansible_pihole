---
###############################################################################
# Group Management Lists
###############################################################################
# Group Management lists are configured via REST API. Application password used
# with fallback to web password with TOTP token prompt.
#
# Requires:
# * pihole_srv_api set.
# * pihole_srv_api_config_enable=true.
# * pihole_cfg_webserver_api_totp_secret set.
# * pihole_cfg_webserver_api_app_pwhash or pihole_cfg_webserver_api_pwhash set.

# Group Management → Groups.
#
# Special Case:
# * Default (id:0) is automatically created on installation; however this
#   should **always** be specified to make role applications idempotent.
# * Each newly added client or domain gets assigned to group id:0 when being
#   added.
#
# pihole_cfg_mgmt_groups:
#       list of dict - Group definitions.
#   - name: str - Group name.
#     comment: str - Group description.
#     enabled: bool - Enable processing of objects linked to this group.
#
# default:
#   - name: 'Default'
#     comment: 'The default group'
#     enable: true
pihole_cfg_mgmt_groups:
  - name: 'Default'
    comment: 'The default group'
    enabled: true

# Group Management → Clients
#
# pihole_cfg_mgmt_clients:
#     list of dict - Client definitions.
#   - client: str - Client identifier (IPv4, IPv6, CIDR, MAC, Hostname, or
#         Interface). IP/CIDR preferred over MAC/Hostname/Interface as the
#         latter will only be available after some time. MAC recognition only
#         works for devices at most one networking hop away.
#         Special Case:
#           ^:{INTERFACE}: Interfaces must be pre-pended with colon ':'.
#     comment: str - Client description.
#     groups: list of str - Groups client belongs to. Use
#         pihole_cfg_mgmt_groups[].name.
#
# pihole_cfg_mgmt_clients:
#   - client: '00:11:22:AA:BB:CC'
#     comment: 'lappy'
#     groups:
#       - 'Default'
#       - 'laptops'
#
# Default: [].
pihole_cfg_mgmt_clients: []

# Group Management → Domains
#
# pihole_cfg_mgmt_domains:
#     list of dict - Domain definitions.
#   - domain: str - Domain or regex pattern. Unicode characters accepted.
#     type: str - Domain type.
#         Values:
#           allow: Allow domain.
#           deny: Deny domain.
#     kind: str - Domain matching method (kind).
#         Values:
#           exact: Exact domain string match.
#           regex: Regex domain string match.
#     comment: str - Domain description.
#     groups: list of str - Groups client belongs to. Use
#         pihole_cfg_mgmt_groups[].name.
#     enabled: bool - Enable domain rule.
#
# pihole_cfg_mgmt_domains:
#   - domain: 'example.com'
#     type: 'allow'
#     kind: 'exact'
#     comment: 'Example allowed domain match.'
#     groups: ['Default']
#     enabled: true
#
# Default: [].
pihole_cfg_mgmt_domains: []

# Group Management → Lists
#
# TODO(bug): List deletion via API is currently broken. This is fixed in the
#     next PiHole release. Lists will still be managed, but cannot be deleted.
#
#     https://github.com/pi-hole/FTL/issues/2528
#
# pihole_cfg_mgmt_lists:
#     list of dict - Subscribed list definitions.
#   - address: str - List URL.
#     type: str - List type.
#         Values:
#           allow: Allow domains on list.
#           block: Block domains on list.
#     comment: str - Domain description.
#     groups: list of str - Groups client belongs to. Use
#         pihole_cfg_mgmt_groups[].name.
#     enabled: bool - Enable domain rule.
#
# Default:
#   - address:
#       'https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts'
#     type: 'block'
#     comment: 'Migrated from /etc/pihole/adlists.list'
#     groups: ['Default']
#     enabled: true
pihole_cfg_mgmt_lists:
  - address: 'https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts'
    type: 'block'
    comment: 'Migrated from /etc/pihole/adlists.list'
    groups: ['Default']
    enabled: true
